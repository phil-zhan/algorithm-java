package org.study.coding.class32;

/**
 * 172. 阶乘后的零
 * 给定一个整数 n ，返回 n! 结果中尾随零的数量。
 * 提示 n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1
 *
 *
 *
 * 示例 1：
 * 输入：n = 3
 * 输出：0
 * 解释：3! = 6 ，不含尾随 0
 *
 * 示例 2：
 * 输入：n = 5
 * 输出：1
 * 解释：5! = 120 ，有一个尾随 0
 *
 * 示例 3：
 * 输入：n = 0
 * 输出：0
 *
 * 解法：
 * n的阶乘结果有多少个0.本质上就是在求有多少个5的因子【在阶乘的计算过程中。2的因子比5的因子多。能找到一个5因子，就能找到一个2因子，最后搞成一个0】
 * 5、10、15、20、25  都是5的因子。
 * 在阶乘的计算过程中，每5个数就有一个5的因子。
 * 但是，需要注意，有些数不止一个5的因子。比如25就有两个
 * 在阶乘的计算过程中，每25个数就多一个5的因子。
 * 在阶乘的计算过程中，每125个数就再多一个5的因子。
 * 在阶乘的计算过程中，每5*125个数就再多一个5的因子。
 *
 * 所以5的因子个数就是
 * n/5 + n/25 + n/125 + ... +
 * 简化一下，每次都能提出一个 n/5 出来。也就是每次都除以5，在累加
 *
 * 一直加到 n/x = 0 的时候
 *
 *
 *
 * @since 2022-04-18 23:53:48
 */
public class Problem_0172_FactorialTrailingZeroes {

	public static int trailingZeroes(int n) {
		int ans = 0;
		while (n != 0) {

			// 第一次是 n/5
			// 第二次是 n/(5*5)
			// 第三次是 n/(5*5*5)
			// .....
			n /= 5;
			ans += n;
		}
		return ans;
	}

}
